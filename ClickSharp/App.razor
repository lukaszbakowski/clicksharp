@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ClientContext client
@inject IJSRuntime jsRuntime

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" >
                <NotAuthorized>
                    <p role="alert">Sorry, there's nothing at this address or you are not allowed to see this content.</p>
                </NotAuthorized>
                <Authorizing>
                    <div class="d-flex justify-content-center">
                        <div class="spinner-grow" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address or you are not allowed to see this content.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>



@code {
    protected override async Task OnInitializedAsync()
    {
        string? ip = await jsRuntime.InvokeAsync<string>("GetAddr");
        client.Init(ip);
        //client.Init("123");
        await Task.Delay(200);
        await base.OnInitializedAsync();
    }
}